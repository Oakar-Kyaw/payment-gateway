name: CICD

on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs: 
  build: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/payment-service:latest
            ${{ secrets.DOCKER_USERNAME }}/payment-service:${{ github.sha }}

  deploy: 
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Store current version for auto-rollback
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Store current running version before deployment
            docker inspect payment-service --format='{{.Config.Image}}' > /tmp/payment-service-backup.txt 2>/dev/null || echo "No previous version"
            echo "🔄 Backup version stored: $(cat /tmp/payment-service-backup.txt 2>/dev/null || echo 'None')"

      - name: Deploy with Simple Rollback
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🚀 Starting deployment..."

            # Pull new image
            echo "📥 Pulling latest Docker image..."
            if ! docker pull ${{ secrets.DOCKER_USERNAME }}/payment-service:latest; then
              echo "❌ Failed to pull new image!"
              exit 1
            fi

            # Stop and remove current container
            echo "⏹️  Stopping and removing current container..."
            docker stop payment-service || echo "No existing container to stop"
            docker rm payment-service || echo "No existing container to remove"

            # Start new container
            echo "🆕 Starting new container..."
            if ! docker run -d -p 8000:8000 --name payment-service ${{ secrets.DOCKER_USERNAME }}/payment-service:latest; then
              echo "❌ Failed to start new container! Rolling back..."

              # Try to rollback to previous version
              if [ -f /tmp/payment-service-backup.txt ]; then
                BACKUP_VERSION=$(cat /tmp/payment-service-backup.txt)
                echo "🔄 Restoring backup version: $BACKUP_VERSION"
                if docker run -d -p 8000:8000 --name payment-service $BACKUP_VERSION; then
                  echo "✅ Rollback successful!"
                else
                  echo "❌ Rollback failed! Manual intervention required!"
                  exit 1
                fi
              else
                echo "❌ No backup version found! Manual intervention required!"
                exit 1
              fi
            else
              echo "✅ Deployment completed successfully!"
              echo "📋 New version: ${{ github.sha }}"
            fi

      - name: Deployment Status
        if: success()
        run: |
          echo "🎉 Pipeline completed successfully!"
          echo "📋 Status: Deployment successful or rollback completed"

      - name: Deployment Failed
        if: failure()
        run: |
          echo "💥 Pipeline failed!"
          echo "🚨 Check the logs above for rollback status"
          echo "⚠️  Manual intervention may be required"
