- name: Deploy with Auto-Rollback and Health Check
  uses: appleboy/ssh-action@v1.0.0
  with:
    host: ${{ secrets.EC2_HOST }}
    username: ${{ secrets.EC2_USER }}
    key: ${{ secrets.EC2_SSH_KEY }}
    script: |
      set -e

      IMAGE="${{ secrets.DOCKER_USERNAME }}/payment-service:latest"
      HEALTH_URL="${{ secrets.PAYMENT_SERVICE_URL }}/api/v1/health"
      BACKUP_FILE="/tmp/payment-service-backup.txt"

      echo "🧹 Cleaning up old containers..."
      docker rm -f payment-service-new || true
      docker rm -f payment-service || true

      echo "📥 Pulling new image..."
      docker pull $IMAGE

      echo "💾 Saving current image for rollback (if exists)..."
      docker inspect $IMAGE --format='{{.RepoTags}}' > $BACKUP_FILE 2>/dev/null || echo "none" > $BACKUP_FILE

      echo "🚀 Starting new container as 'payment-service-new'..."
      docker run -d -p 8000:8000 --name payment-service-new $IMAGE

      echo "⏳ Waiting 10s for service to warm up..."
      sleep 10

      echo "🔍 Performing health check on $HEALTH_URL..."
      HEALTH_OK=false
      for i in {1..5}; do
        if curl -fs $HEALTH_URL >/dev/null; then
          HEALTH_OK=true
          break
        fi
        echo "❌ Attempt $i failed... waiting"
        sleep 5
      done

      if [ "$HEALTH_OK" = true ]; then
        echo "✅ Health check passed. Promoting new container..."
        docker rename payment-service-new payment-service
      else
        echo "🚨 Health check failed. Rolling back..."
        docker rm -f payment-service-new || true

        BACKUP_IMAGE=$(cat $BACKUP_FILE)
        if [ "$BACKUP_IMAGE" = "none" ]; then
          echo "⚠️ No previous image to roll back to. Manual fix needed."
          exit 1
        fi

        echo "🔄 Restarting backup version: $BACKUP_IMAGE"
        docker run -d -p 8000:8000 --name payment-service $BACKUP_IMAGE

        sleep 5
        if curl -fs $HEALTH_URL >/dev/null; then
          echo "✅ Rollback successful."
        else
          echo "❌ Rollback failed too. Manual intervention needed."
          exit 1
        fi
      fi
