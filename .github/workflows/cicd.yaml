name: CICD

on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs: 
  build: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/payment-service:latest
            ${{ secrets.DOCKER_USERNAME }}/payment-service:${{ github.sha }}

  deploy: 
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy with Auto-Rollback and Health Check
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            IMAGE="${{ secrets.DOCKER_USERNAME }}/payment-service:latest"
            HEALTH_URL="https://localhost:8000/api/v1/health"
            BACKUP_FILE="/tmp/payment-service-backup.txt"

            echo "🔎 Checking existing containers..."
            docker inspect payment-service --format='{{.Config.Image}}' > $BACKUP_FILE 2>/dev/null || echo "none" > $BACKUP_FILE
            echo "📦 Backup image: $(cat $BACKUP_FILE)"

            echo "📥 Pulling latest image..."
            docker pull $IMAGE

            echo "🚀 Starting new container as 'payment-service-new'..."
            docker run -d -p 8000:8000 --name payment-service-new $IMAGE

            echo "⏳ Waiting 15 seconds for warm-up..."
            sleep 15

            echo "🩺 Health check on $HEALTH_URL..."
            HEALTH_OK=false
            for i in {1..5}; do
              echo "🧪 Attempt $i..."
              if curl -kfs $HEALTH_URL > /dev/null; then
                echo "✅ Health check passed."
                HEALTH_OK=true
                break
              fi
              echo "❌ Health check failed. Retrying in 5s..."
              sleep 5
            done

            if [ "$HEALTH_OK" = true ]; then
              echo "🎉 Promoting new container..."
              docker rename payment-service-new payment-service
              echo "✅ Deployment complete!"
            else
              echo "🚨 Health check failed after retries. Initiating rollback..."

              docker rm -f payment-service-new || true

              BACKUP_IMAGE=$(cat $BACKUP_FILE)
              if [ "$BACKUP_IMAGE" = "none" ]; then
                echo "⚠️ No backup image found! Manual recovery needed."
                exit 1
              fi

              echo "🔁 Rolling back to $BACKUP_IMAGE..."
              docker run -d -p 8000:8000 --name payment-service $BACKUP_IMAGE

              echo "⏳ Waiting 10s for rollback app to warm up..."
              sleep 10

              if curl -kfs $HEALTH_URL > /dev/null; then
                echo "✅ Rollback successful."
              else
                echo "❌ Rollback also failed. Manual intervention required!"
                exit 1
              fi
            fi

            echo "🧹 Cleaning up unused Docker images to save space..."
            docker image prune -af || true

      - name: Deployment Status
        if: success()
        run: |
          echo "🎉 Deployment or rollback succeeded!"

      - name: Deployment Failed
        if: failure()
        run: |
          echo "💥 Deployment and rollback failed!"
          echo "🚨 Manual intervention required. Check EC2 logs."
